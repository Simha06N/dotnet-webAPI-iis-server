name: Deployment Pipeline

on:
  push:
    branches:
      - develop  # Change to your branch

jobs:
  api-deployment:
    runs-on: win2022-server

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Set Timestamp Variable
      id: set-timestamp
      run: |
        # Generate a timestamp to create a unique backup folder
        $timestamp = Get-Date -Format "yyyyMMdd_HHmmss"
        echo "Timestamp: $timestamp"
        echo "::set-output name=timestamp::$timestamp"

    - name: Checking User Name
      run: |
        # Create a unique backup folder based on the timestamp
         whoami
        
    - name: Create Unique Backup Folder
      run: |
        # Create a unique backup folder based on the timestamp
        $timestamp = $env:TIMESTAMP
        $backupFolder = "C:\Backup\SampleAPP\$timestamp"
        New-Item -Path $backupFolder -ItemType Directory -Force
        echo "Backup folder created: $backupFolder"

    - name: Backup API Deployment Folder
      run: |
        # Copye the existing deployment folder to the unique backup folder
        $timestamp = $env:TIMESTAMP
        $backupFolder = "C:\Backup\SampleAPP\$timestamp"
        Copy-Item -Path "C:\SampleAPP\*" -Destination $backupFolder -Recurse -Force
        echo "Backup completed to $backupFolder"

    - name: Stop App Pool and Website
      run: |
        # Stop the App pool and website in IIS
        iisreset /stop
        # Wait for a moment to allow IIS services to stop (adjust the sleep duration as needed)
        Start-Sleep -Seconds 10
    
    - name: Build API
      run: |
        cd path/to/your/api/project
        dotnet build --configuration Release

    - name: Replace DLLs
      run: |
        robocopy path/to/your/api/project/bin/Release/net6.0/publish C:\SampleAPP /MIR

    - name: Check for Deployment Issues and Rollback
      run: |
        # Check for deployment issues (e.g., check for a specific file's existence)
        if (-not (Test-Path "C:\SampleAPP\YourFile.dll")) {
          echo "Deployment issues detected. Rolling back..."
          $timestamp = $env:TIMESTAMP
          $backupFolder = "C:\Backup\SampleAPP\$timestamp"
          Copy-Item -Path $backupFolder\* -Destination "C:\SampleAPP" -Recurse -Force  # Restore backup
          iisreset /start  # Restart app pool and website
          exit 1  # Exit with an error code to indicate the deployment failed
        } else {
          echo "Deployment successful."
        }

    - name: Restart App Pool and Website
      run: |
        iisreset /start

    # Add steps for artifact publishing, creating a release, and interacting with your CD pipeline
